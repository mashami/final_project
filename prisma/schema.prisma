// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mongodb"
  url               = env("DATABASE_URL")
}

model User {
  id                  String         @id @default(auto()) @map("_id") @db.ObjectId
  name                String?        @unique
  email               String         @unique
  password            String
  phone               String?
  profile_image       String?
  profile_image_id    String?
  status              Status           @default(User)
  linkedin            String?
  dev_status          DevStatus        @default(Unctive)
  github              String?
  hostedlink          String?  
  languages            String? 
  discription         String?
  apis               Api[]
  // requestId          String   @db.ObjectId
  // requestsAsContributor Request?  @relation(fields: [requestId], references: [id])
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @default(now())    
}

model Api {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  discription String
  languages    String
  price       String?
  accessToken String?
  apiDocumentationLink String?
  image       String?
  imageId     String?
  apiUrl      String
  apiId       String
  apiCategory  ApiCategory      @default(Public)
  category     Category           @default(IoT)
  apiStatus   ApiStatus  @default(Unctive)
  ownerId     String   @db.ObjectId
  owner       User     @relation(fields: [ownerId], references: [id])
  payment     Payment[]  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}


model Request {
   id                 String   @id @default(auto()) @map("_id") @db.ObjectId
   email              String
   phoneNumber        String
   company            String   @default("")
   status             RequestStatus   @default(Active)
   description        String
   contributors        String[]  @default([""])
   probleStatmentUrl  String
   probleStatmentId   String
   createdAt          DateTime @default(now())
   updatedAt          DateTime @default(now())

}


model Payment {
   id              String   @id @default(auto()) @map("_id") @db.ObjectId
   email           String
   phoneNumber     String 
   paymentRef      String
   requestId       String?  
   ApiId           String?  @db.ObjectId
   Api             Api?    @relation(fields: [ApiId], references: [id])
   createdAt       DateTime @default(now())
   updatedAt       DateTime @default(now())

}





enum Status { 
  Admin
  User
  Dev
}

 

enum Category { 
  Payment
  Social_Media
  Map_and_Location
  Authentication
  Authorization
  File_Storage_and_Hosting
  Messaging_and_Communication
  SearchAnalytics_and_Monitoring
  Video_Streaming_and_Hosting
  Payment_Gateway
  Cloud_Computing
  Machine_Learning_and_AI
  IoT
  Calendar_and_Events
  Translation_and_Language
  E_commerce
  Database
  Authentication_and_Identity
  Version_Control
}

enum ApiCategory {
  Private
  Public
}

enum DevStatus {
  Active
  Unctive

}
enum RequestStatus {
  Active
  Unctive

}
enum ApiStatus {
  Active
  Unctive

}

